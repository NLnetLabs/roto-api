#!/bin/bash


arg="$1"
if [ "$arg" != "" ] && [ "$arg" != "--dry-run" ] && [ "$arg" != "--force-sync" ]; then
  echo "download delegated extended files from RIRs"
  echo "usage: update-status-riswhois [--dry-run|--force-sync]"
  echo
  echo "set envvar ROTO_API_PEER to sync to peer"
  exit 0
fi

if [ "$ROTO_API_PEER" = "" ] && [ "$arg" != "--dry-run" ]; then
  echo `date --iso-8601="seconds"` roto-api Error: Set envvar ROTO_API_PEER to sync to peer
  exit 1
fi

# move to the dir of the repo this script is in
cd "$(dirname "$0")"
cd ..

changed=false

for riswhois in \
	riswhois4,www.ris.ripe.net/dumps/riswhoisdump.IPv4.gz, \
	riswhois6,www.ris.ripe.net/dumps/riswhoisdump.IPv6.gz \
;do IFS=","
	set -- $riswhois
	cur_ts=`cat downloads/"$1"_h.txt | /home/roto/.cargo/bin/rg -e '^Last-Modified: (.+)$' --replace '$1'`
	next_ts=`curl -s --HEAD $2 | /home/roto/.cargo/bin/rg -e '^Last-Modified: (.+)$' --replace '$1'`

	if [ "$cur_ts" != "$next_ts" ]; then
	    echo `date --iso-8601="seconds"` roto-api riswhois "$1" remote file changed.
	    "$changed" = true
	    if [ "$arg" != "--dry-run" ]; then
	       echo `date --iso-8601="seconds"` roto-api downloading $2
	       scripts/download-riswhois "$1"
	       if [ $1 = "riswhois6" ]; then
	            echo `date --iso-8601="seconds"` roto-api riswhois restarting local roto-api.
		    XDG_RUNTIME_DIR="/run/user/1000" \
                    DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/1000/bus" \
		    systemctl --user restart roto-api
	       fi
            fi
	fi
done

if [ "$changed" = true ] || [ "$arg" = "--force-sync" ]; then
    echo `date --iso-8601="seconds"` roto-api riswhois syncing with peer.
    rsync -Cavz --delete data/ "$ROTO_API_PEER":/home/roto/ris_alloc_api/data/
    echo `date --iso-8601="seconds"` roto-api riswhois restarting peer.
    ssh roto@"$ROTO_API_PEER" "systemctl --user restart roto-api"
else
    echo `date --iso-8601="seconds"` roto-api riswhois nothing changed, skipping syncing with peer
fi
